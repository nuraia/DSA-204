#include <iostream>
#include<vector>
#include<queue>
using namespace std;

vector<int>adj[100];
int visited[100]={0};

void edge(int a,int b){
    adj[a].push_back(b);
    adj[b].push_back(a);
}

void bfs(int s){
    queue <int> Q;
    visited[s]=1;
    Q.push(s);
    while(!Q.empty()){
        int u=Q.front();
        Q.pop();
        for(int i=0;i< adj[u].size();++i){
            if(visited[u][i]==0){
            int v=adj[u][i];
            visited[v]=1;
            Q.push(v);}
        }
    }
    
}

int main()
{
   int n=7,count=0;
     
   edge(1,2);
   edge(2,4);
   edge(1,3);
   edge(3,5);
   edge(3,6);
   edge(7,0);
   
   for(int i=0;i< n;++i){
       if(visited[i]==0){
           bfs(i);
           ++count;
       }
   }
   
   cout<<"Total Component : "<<count<<endl;
   
   return 0;
}
